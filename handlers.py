# handlers.py
from aiogram import types
from db import insert_data
from ui import get_questions_menu, get_main_menu
from popular_questions import get_popular_questions

async def handle_questions_menu(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ '–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫–∞–∑—É'."""
    if message.text == "–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        questions = get_popular_questions()
        response = "\n\n".join(questions)
        await message.answer(f"–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n{response}")
    elif message.text == "–ù–∞–∑–∞–¥":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=get_main_menu())

        
async def handle_menu(message: types.Message, user_data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ –º–µ–Ω—é"""
    user_id = message.chat.id
    user_data[user_id] = {"step": message.text, "data": {}}
    
    if message.text == "üíµ–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞üíµ":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    elif message.text == "üõéÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—ÉüõéÔ∏è":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    elif message.text == "üìë–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µüìë":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    elif message.text == "üí∞–ù–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω–∞üöö":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")

async def collect_data(message: types.Message, user_data):
    """–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.chat.id
    if user_id not in user_data or not user_data[user_id]["step"]:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:", reply_markup=get_main_menu())
        return

    step = user_data[user_id]["step"]
    data = user_data[user_id]["data"]

    # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Ç–µ–∫—É—â–∏–π —à–∞–≥ –∏ –¥–∞–Ω–Ω—ã–µ
    print(f"–®–∞–≥: {step}, –î–∞–Ω–Ω—ã–µ: {data}")

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞"
    if step == "üíµ–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞üíµ":
        if "fio" not in data:
            data["fio"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω–æ –§–ò–û: {data['fio']}")
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        elif "phone" not in data:
            data["phone"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω: {data['phone']}")
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å:")
        elif "adres" not in data:
            data["adres"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω adres: {data['adres']}")
            
            # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É orders
            try:
                insert_data("orders", data)
                print(f"–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É orders: {data}")
                user_data[user_id] = {"step": None, "data": {}}
                await message.answer("–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!", reply_markup=get_main_menu())
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É: {e}")
                await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É"
    elif step == "üõéÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—ÉüõéÔ∏è":
        if "fio" not in data:
            data["fio"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω–æ –§–ò–û –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤: {data['fio']}")
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:")
        elif "phone" not in data:
            data["phone"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤: {data['phone']}")
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à adres –¥–ª—è —Å–≤—è–∑–∏:")
        elif "adres" not in data:
            data["adres"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω adres –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤: {data['adres']}")
            
            # –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É questions
            try:
                insert_data("questions", data)
                print(f"–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É questions: {data}")
                user_data[user_id] = {"step": None, "data": {}}
                await message.answer("–í–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ –∑–∞–∫–∞–∑—É —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!", reply_markup=get_main_menu())
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É: {e}")
                await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ"
    elif step == "üìë–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µüìë":
        if "fio" not in data:
            data["fio"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω–æ –§–ò–û –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏: {data['fio']}")
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        elif "phone" not in data:
            data["phone"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏: {data['phone']}")
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à adres:")
        elif "adres" not in data:
            data["adres"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω adres –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏: {data['adres']}")
            
            # –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É accounting
            try:
                insert_data("accounting", data)
                print(f"–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É accounting: {data}")
                user_data[user_id] = {"step": None, "data": {}}
                await message.answer("–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!", reply_markup=get_main_menu())
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É: {e}")
                await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è "–ù–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω–∞"
    if step == "üí∞–ù–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω–∞üí∞":
        if "fio" not in data:
            data["fio"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω–æ –§–ò–û –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {data['fio']}")
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        elif "phone" not in data:
            data["phone"] = message.text
            print(f"–ü–æ–ª—É—á–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {data['phone']}")
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à adres:")
        elif "adres" not in data:
            data["adres"] = message.text
            
            # –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É suppliers
            try:
                print(f"–ü–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {data}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                insert_data("suppliers", data)
                print(f"–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É suppliers: {data}")
                user_data[user_id] = {"step": None, "data": {}}
                await message.answer("–í–∞—à –∑–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!", reply_markup=get_main_menu())
                await message.answer("–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É: {e}")
                await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")