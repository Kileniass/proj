# main.py
from aiogram import Bot, Dispatcher, executor, types
from config import API_TOKEN
from handlers import handle_menu, collect_data, handle_questions_menu
from ui import get_main_menu, get_questions_menu



bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user_id = message.chat.id
    user_data[user_id] = {"step": None, "data": {}}
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

@dp.message_handler(lambda msg: msg.text in [
    "üíµ–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞üíµ",
    "üõéÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—ÉüõéÔ∏è",
    "üìë–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ãüìë",
    "üí∞–ù–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω–∞üí∞"
])
async def menu_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    await handle_menu(message, user_data)

@dp.message_handler()
async def data_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
    await collect_data(message, user_data)
    
@dp.message_handler(lambda msg: msg.text == "üõéÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—ÉüõéÔ∏è")
async def questions_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫–∞–∑—É'."""
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_questions_menu())

@dp.message_handler(lambda msg: msg.text in ["–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "–ù–∞–∑–∞–¥"])
async def popular_questions_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã'."""
    await handle_questions_menu(message)
   

if __name__ == '__main__':
    from db import init_db
    init_db()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    executor.start_polling(dp, skip_updates=True)
